package com.example.practice

import android.Manifest
import android.animation.ObjectAnimator


class lab2 : AppCompatActivity() {

    lateinit var videoView: VideoView
    lateinit var audioButton: Button
    lateinit var myDBHelper: MyDBHelperLab2
    private var mediaRecorder: MediaRecorder? = null

    private val audioFilePath: String
        get() = "${externalCacheDir?.absolutePath}/simple_recording.3gp"

    override fun onCreate(savedInstanceState: Bundle?) {
        super.onCreate(savedInstanceState)
        enableEdgeToEdge()
        setContentView(R.layout.activity_lab2)

        ViewCompat.setOnApplyWindowInsetsListener(findViewById(R.id.main)) { v, insets ->
            val systemBars = insets.getInsets(WindowInsetsCompat.Type.systemBars())
            v.setPadding(systemBars.left, systemBars.top, systemBars.right, systemBars.bottom)
            insets
        }

        audioButton = findViewById(R.id.audiobut)
        videoView = findViewById(R.id.videoView)

        // AUDIO playback
        audioButton.setOnClickListener {
            val mediaPlayer = MediaPlayer.create(this, R.raw.aud)
            mediaPlayer.start()
        }

        // VIDEO playback
        videoView.setVideoPath("android.resource://$packageName/${R.raw.vid}")
        videoView.start()

        // Animation
        animateButton()

        // SQLITE
        myDBHelper = MyDBHelperLab2(this)
        val saveButton = findViewById<Button>(R.id.save)
        val tsql = findViewById<EditText>(R.id.tsql)
        val displayButton = findViewById<Button>(R.id.displayBut)
        val displayText = findViewById<TextView>(R.id.displayText)

        saveButton.setOnClickListener {
            val text = tsql.text.toString()
            myDBHelper.insert(text)
            Toast.makeText(this, "Saved to SQL", Toast.LENGTH_SHORT).show()
        }

        displayButton.setOnClickListener {
            val data = myDBHelper.getAllData()
            displayText.text = data
        }

        // WIFI toggle
        val wifiBut = findViewById<Button>(R.id.wifiBut)
        wifiBut.setOnClickListener {
            val wifiManager = applicationContext.getSystemService(Context.WIFI_SERVICE) as WifiManager
            if (wifiManager.isWifiEnabled) {
                wifiManager.isWifiEnabled = false
                Toast.makeText(this, "WiFi OFF", Toast.LENGTH_SHORT).show()
            } else {
                wifiManager.isWifiEnabled = true
                Toast.makeText(this, "WiFi ON", Toast.LENGTH_SHORT).show()
            }
        }

        // SMS intent
        val smsBut = findViewById<Button>(R.id.smsBut)
        smsBut.setOnClickListener {
            val phoneNumber = "1234567890"
            val message = "Hello from Emulator!"
            val smsIntent = Intent(Intent.ACTION_VIEW)
            smsIntent.data = Uri.parse("sms:$phoneNumber")
            smsIntent.putExtra("sms_body", message)
            startActivity(smsIntent)
        }

        // PERMISSIONS
        if (ActivityCompat.checkSelfPermission(this, Manifest.permission.CAMERA) != PackageManager.PERMISSION_GRANTED) {
            ActivityCompat.requestPermissions(this, arrayOf(Manifest.permission.CAMERA), 1)
        }
        if (ActivityCompat.checkSelfPermission(this, Manifest.permission.RECORD_AUDIO) != PackageManager.PERMISSION_GRANTED) {
            ActivityCompat.requestPermissions(this, arrayOf(Manifest.permission.RECORD_AUDIO), 2)
        }

        // CAMERA
        val cameraBut = findViewById<Button>(R.id.cameraBut)
        cameraBut.setOnClickListener {
            val intent = Intent(MediaStore.ACTION_IMAGE_CAPTURE)
            startActivity(intent)
        }

        // MICROPHONE - auto stop after 10 seconds
        val micBut = findViewById<Button>(R.id.micBut)
        micBut.setOnClickListener {
            mediaRecorder = MediaRecorder()
            mediaRecorder?.apply {
                setAudioSource(MediaRecorder.AudioSource.MIC)
                setOutputFormat(MediaRecorder.OutputFormat.THREE_GPP)
                setOutputFile(audioFilePath)
                setAudioEncoder(MediaRecorder.AudioEncoder.AMR_NB)
                prepare()
                start()
            }

            Toast.makeText(this, "Recording started for 10 seconds", Toast.LENGTH_SHORT).show()

            micBut.postDelayed({
                mediaRecorder?.apply {
                    stop()
                    release()
                }
                mediaRecorder = null
                Toast.makeText(this, "Recording stopped", Toast.LENGTH_SHORT).show()
            }, 10000)
        }


        //Location
        val loc=findViewById<Button>(R.id.loc)
        loc.setOnClickListener{
            val int=Intent(Intent.ACTION_VIEW,Uri.parse("https://www.google.com/maps/search/?api=1&query=bocs+pizza"))
            startActivity(int)
        }
    }

    private fun animateButton() {
        val fadeIn = ObjectAnimator.ofFloat(audioButton, "alpha", 0f, 1f)
        fadeIn.duration = 10000
        fadeIn.start()

        val slideUp = ObjectAnimator.ofFloat(audioButton, "translationY", 300f, 0f)
        slideUp.duration = 10000
        slideUp.start()
    }

    override fun onRequestPermissionsResult(requestCode: Int, permissions: Array<out String>, grantResults: IntArray) {
        super.onRequestPermissionsResult(requestCode, permissions, grantResults)
        if (grantResults.isNotEmpty() && grantResults[0] == PackageManager.PERMISSION_GRANTED) {
            when (requestCode) {
                1 -> Toast.makeText(this, "Camera Permission Granted", Toast.LENGTH_SHORT).show()
                2 -> Toast.makeText(this, "Microphone Permission Granted", Toast.LENGTH_SHORT).show()
            }
        } else {
            Toast.makeText(this, "Permission Denied", Toast.LENGTH_SHORT).show()
        }
    }
}
